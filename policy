data "aws_kms_key" "existing" {
  key_id = var.kms_key_id
}

data "aws_caller_identity" "current" {}

resource "aws_kms_key_policy" "update" {
  key_id = data.aws_kms_key.existing.key_id

  policy = jsonencode({
    Version   = "2012-10-17"
    Id        = "key-consolepolicy-3"
    Statement = [
      {
        Sid       = "Enable IAM User Permissions"
        Effect    = "Allow"
        Principal = {
          AWS = "arn:aws-us-gov:iam::${data.aws_caller_identity.current.account_id}:root"
        }
        Action   = "kms:*"
        Resource = "*"
      },
      {
        Sid       = "Allow access for Key Administrators"
        Effect    = "Allow"
        Principal = {
          AWS = [
            "arn:aws-us-gov:iam::199587841521:role/devops-nis-efa-sftp",
            "arn:aws-us-gov:iam::215124944813:role/devops-nis-efa-crossaccount-lambda-role",
            "arn:aws-us-gov:iam::199587841521:role/cfs-adt-engineer-role"
          ]
        }
        Action   = [
          "kms:Describe*",
          "kms:Get*",
          "kms:List*",
          "kms:Revoke*",
          "kms:Disable*",
          "kms:Enable*",
          "kms:Delete*",
          "kms:TagResource",
          "kms:UntagResource",
          "kms:ScheduleKeyDeletion",
          "kms:CancelKeyDeletion",
          "kms:Create*",
          "kms:Encrypt",
          "kms:Decrypt",
          "kms:ReEncrypt*",
          "kms:GenerateDataKey*"
        ]
        Resource = "*"
      },
      {
        Sid       = "AllowKMSKeyAccess-fso-easy"
        Effect    = "Allow"
        Principal = {
          AWS = var.fso_easy_principals
        }
        Action = [
          "kms:List*",
          "kms:Get*",
          "kms:GenerateDataKey*",
          "kms:Describe*",
          "kms:Decrypt"
        ]
        Resource = [
          "${data.aws_kms_key.existing.arn}"
        ]
      }
    ]
  })
}

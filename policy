data "aws_iam_policy_document" "full_policy" {
  # Force HTTPS block
  statement {
    sid    = "ForceHttps"
    effect = "Deny"
    actions = ["s3:*"]
    resources = ["${data.aws_s3_bucket.target.arn}/*"]
    principals {
      type = "*"
      identifiers = ["*"]
    }
    condition {
      test     = "Bool"
      variable = "aws:SecureTransport"
      values   = ["false"]
    }
  }

  # Lambda notification access
  statement {
    sid = "AllowLambdaNotifications"
    effect = "Allow"
    principals {
      type        = "Service"
      identifiers = ["lambda.amazonaws.com"]
    }
    actions = ["s3:PutBucketNotification"]
    resources = [data.aws_s3_bucket.target.arn]
  }

  # ðŸ‘‡ Customer blocks from map
  dynamic "statement" {
    for_each = var.customer_access_map

    content {
      sid = "AllowS3Access-${each.key}"

      effect = "Allow"

      principals {
        type        = "AWS"
        identifiers = each.value.principals
      }

      actions = each.value.actions

      resources = flatten([
        for prefix in each.value.prefixes :
        "${data.aws_s3_bucket.target.arn}/${prefix}/*"
      ])
    }
  }
}
